{
  "hash": "5e18ff6c880f0ec1a689ed9d4f62dc1a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Importing data into R\nsubtitle: Cheatsheet\ndate: today\n# editor:\n#   render-on-save: true\n---\n\n\n\n\n::: callout-note\nThis cheatsheet does not have working examples as it is intended to be used as a reference guide. If you wish to practice, download the two files below and try importing them into R using the code snippets provided in the cheatsheet.\n:::\n\n\n::: {.callout-tip}\n## Download data\nWe have two separate datasets. The first dataset is part of the possums dataset used in [BIOL2022](https://www.sydney.edu.au/units/BIOL2022) labs. It contains two numerical variables: `ExpBLUP` and `AactiveTBLUP`. The data is available in the file `possums-blup.csv`.\n\nThe second dataset, `penguins.csv`, contains data collected by Dr. Kristen Gorman and the Palmer Station, Antarctica LTER. Details about the dataset can be found [here](https://allisonhorst.github.io/palmerpenguins/).\n\n\n\n\n{{< downloadthis possums.xlsx dname=\"possums\" label=\"possums.xlsx\" type=\"primary\" >}} {{< downloadthis penguins.csv dname=\"penguins\" label=\"penguins.csv\" type=\"primary\" >}}\n\n\n\n\n\n:::\n\n## File paths\n\n- **File paths** specify the location of a file on your computer. They show the route to the file, starting from the root of the file system, passing through folders and subfolders, and ending with the file name.\n- For reproducibility, consider using [**projects**](https://r4ds.hadley.nz/workflow-scripts.html#projects) in RStudio, which standardises the working directory. Alternatively, use `setwd()` but note that absolute paths may not work on other computers as they are specific to your computer.\n\n## Working directory\n\nThe **working directory** is the folder where R will look for files by default. If you use absolute paths, you don't need to set the working directory but your paths will not be reproducible on other computers. Use `getwd()` as a first step to check the current working directory and get your bearings, as one is always set when you open R.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()                           # Get current working directory\nsetwd(\"C:/path/to/your/folder\")   # Set working directory\ndata <- read.csv(\"file.csv\")      # File in the current working directory\ndata <- read.csv(\"data/file.csv\") # File in a subdirectory\ndata <- read.csv(\"../file.csv\")   # File in a parent directory\n```\n:::\n\n\n\n\n## Importing data into R\n\nThe most common data formats and how to import them into R are listed below. For other formats, see the **More resources** section.\n\n::: panel-tabset\n\n## CSV files (.csv)\n\nYou can either use base R's `read.csv()` or the `readr` package to import CSV files. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"file.csv\") # Base R\n\nlibrary(readr) # readr package (faster, more robust)\ndf <- read_csv(\"file.csv\")\n```\n:::\n\n\n\n\n\n## Excel files (.xlsx, .xls)\n\nYou can use the `readxl` package to import Excel files. Use `?read_excel` to view more options e.g. `sheet`, `range`, etc.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl) # readxl package\ndf <- read_excel(\"file.xlsx\", sheet = \"Sheet1\")\n```\n:::\n\n\n\n\n\n## Tab-delimited files (.tsv)\n\nYou can use base R's `read.delim()` or the `readr` package to import tab-delimited files.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.delim(\"file.txt\") # Base R\n\nlibrary(readr) # readr package\ndf <- read_tsv(\"file.tsv\")\n```\n:::\n\n\n\n\n\n## RDS Files (R's native format)\n\nYou can use the `readRDS()` function to import RDS files.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- readRDS(\"file.rds\")\n```\n:::\n\n\n\n:::\n\n## Windows file paths\n\n- Windows file paths use backslashes (`\\`) instead of forward slashes (`/`), which can cause issues in R.\n- R deals with this by \"escaping\" the backslashes. For every backslash in a file path, you need to use two backslashes.\n- Use `r(...)` to automatically escape Windows backslashes in file paths. For example:\n  - `r\"(C:\\Users\\jd\\Documents\\folder\\file.csv)\"` converts to\n  - `\"C:\\\\Users\\\\jd\\\\Documents\\\\folder\\\\file.csv\"`\n- Combining `r()` with `read_csv()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::read_csv(r\"(C:\\Users\\jd\\Documents\\folder\\file.csv)\")\n```\n:::\n\n\n\n\n\n## More resources\n\n- [File Paths](https://www.r4epi.com/file-paths) in R for Epidemiology -- a detailed guide on file paths in R.\n- Datacamp's [How to Import Data Into R](https://www.datacamp.com/tutorial/r-data-import-tutorial) -- a comprehensive tutorial on importing data into R including databases, APIs, and web scraping.\n\n\n## License\nThis work was developed using resources that are available under a [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/), made available on the [SOLES Open Educational Resources](https://github.com/usyd-soles-edu) repository by the School of Life and Environmental Sciences, The University of Sydney.",
    "supporting": [
      "data-import-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}